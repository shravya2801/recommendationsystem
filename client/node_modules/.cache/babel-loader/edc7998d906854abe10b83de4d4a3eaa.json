{"ast":null,"code":"import React from \"react\";\nimport { API } from \"../../backend\";\nexport const addToFavourites = (user, token, track, rating) => {\n  let bodyData,\n      newTrack = { ...track,\n    rating\n  };\n\n  if (user.favourites) {\n    let ind = user.favourites.findIndex(t => t.id == track.id);\n\n    if (ind !== -1) {\n      user.favourites[ind] = newTrack;\n      bodyData = {\n        favourites: user.favourites\n      };\n    } else {\n      bodyData = {\n        favourites: [...user.favourites, newTrack]\n      };\n    }\n  } else {\n    bodyData = {\n      favourites: [newTrack]\n    };\n  } // console.log(bodyData);\n\n\n  return fetch(`${API}/user/${user._id}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(bodyData)\n  }).then(data => data.json()).catch(err => console.log(err));\n};\nexport const removeFromFavourites = (user, token, id) => {\n  user.favourites = user.favourites.filter(track => track.id !== id);\n  const bodyData = {\n    favourites: user.favourites\n  };\n  return fetch(`${API}/user/${user._id}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(bodyData)\n  }).then(data => data.json()).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/project/MusicBolt-master/MusicBolt-master/client/src/core/helper/coreApiCalls.js"],"names":["React","API","addToFavourites","user","token","track","rating","bodyData","newTrack","favourites","ind","findIndex","t","id","fetch","_id","method","headers","Accept","Authorization","body","JSON","stringify","then","data","json","catch","err","console","log","removeFromFavourites","filter"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,EAAqBC,MAArB,KAAgC;AAC9D,MAAIC,QAAJ;AAAA,MAAcC,QAAQ,GAAG,EAAE,GAAGH,KAAL;AAAYC,IAAAA;AAAZ,GAAzB;;AACA,MAAIH,IAAI,CAACM,UAAT,EAAqB;AACpB,QAAIC,GAAG,GAAGP,IAAI,CAACM,UAAL,CAAgBE,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,EAAF,IAAQR,KAAK,CAACQ,EAA7C,CAAV;;AACA,QAAIH,GAAG,KAAK,CAAC,CAAb,EAAgB;AACfP,MAAAA,IAAI,CAACM,UAAL,CAAgBC,GAAhB,IAAuBF,QAAvB;AACAD,MAAAA,QAAQ,GAAG;AAAEE,QAAAA,UAAU,EAAEN,IAAI,CAACM;AAAnB,OAAX;AACA,KAHD,MAGO;AACNF,MAAAA,QAAQ,GAAG;AAAEE,QAAAA,UAAU,EAAE,CAAC,GAAGN,IAAI,CAACM,UAAT,EAAqBD,QAArB;AAAd,OAAX;AACA;AACD,GARD,MAQO;AACND,IAAAA,QAAQ,GAAG;AAAEE,MAAAA,UAAU,EAAE,CAACD,QAAD;AAAd,KAAX;AACA,GAZ6D,CAa9D;;;AACA,SAAOM,KAAK,CAAE,GAAEb,GAAI,SAAQE,IAAI,CAACY,GAAI,EAAzB,EAA4B;AACvCC,IAAAA,MAAM,EAAE,KAD+B;AAEvCC,IAAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAE,kBADA;AAER,sBAAgB,kBAFR;AAGRC,MAAAA,aAAa,EAAG,UAASf,KAAM;AAHvB,KAF8B;AAOvCgB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,QAAf;AAPiC,GAA5B,CAAL,CASLgB,IATK,CASAC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATR,EAULC,KAVK,CAUCC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVR,CAAP;AAWA,CAzBM;AA2BP,OAAO,MAAMG,oBAAoB,GAAG,CAAC3B,IAAD,EAAOC,KAAP,EAAcS,EAAd,KAAqB;AACxDV,EAAAA,IAAI,CAACM,UAAL,GAAkBN,IAAI,CAACM,UAAL,CAAgBsB,MAAhB,CAAuB1B,KAAK,IAAIA,KAAK,CAACQ,EAAN,KAAaA,EAA7C,CAAlB;AACA,QAAMN,QAAQ,GAAG;AAAEE,IAAAA,UAAU,EAAEN,IAAI,CAACM;AAAnB,GAAjB;AAEA,SAAOK,KAAK,CAAE,GAAEb,GAAI,SAAQE,IAAI,CAACY,GAAI,EAAzB,EAA4B;AACvCC,IAAAA,MAAM,EAAE,KAD+B;AAEvCC,IAAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAE,kBADA;AAER,sBAAgB,kBAFR;AAGRC,MAAAA,aAAa,EAAG,UAASf,KAAM;AAHvB,KAF8B;AAOvCgB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,QAAf;AAPiC,GAA5B,CAAL,CASLgB,IATK,CASAC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATR,EAULC,KAVK,CAUCC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVR,CAAP;AAWA,CAfM","sourcesContent":["import React from \"react\";\nimport { API } from \"../../backend\";\n\nexport const addToFavourites = (user, token, track, rating) => {\n\tlet bodyData, newTrack = { ...track, rating};\n\tif (user.favourites) {\n\t\tlet ind = user.favourites.findIndex(t => t.id == track.id);\n\t\tif (ind !== -1) {\n\t\t\tuser.favourites[ind] = newTrack;\n\t\t\tbodyData = { favourites: user.favourites };\n\t\t} else {\n\t\t\tbodyData = { favourites: [...user.favourites, newTrack] };\n\t\t}\n\t} else {\n\t\tbodyData = { favourites: [newTrack] };\n\t}\n\t// console.log(bodyData);\n\treturn fetch(`${API}/user/${user._id}`, {\n\t\tmethod: \"PUT\",\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify(bodyData)\n\t})\n\t\t.then(data => data.json())\n\t\t.catch(err => console.log(err));\n};\n\nexport const removeFromFavourites = (user, token, id) => {\n\tuser.favourites = user.favourites.filter(track => track.id !== id);\n\tconst bodyData = { favourites: user.favourites };\n\t\n\treturn fetch(`${API}/user/${user._id}`, {\n\t\tmethod: \"PUT\",\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify(bodyData)\n\t})\n\t\t.then(data => data.json())\n\t\t.catch(err => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}