{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"Barba\", [], factory);else if (typeof exports === 'object') exports[\"Barba\"] = factory();else root[\"Barba\"] = factory();\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId])\n          /******/\n          return installedModules[moduleId].exports;\n        /******/\n\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n        var module = installedModules[moduleId] = {\n          /******/\n          exports: {},\n\n          /******/\n          id: moduleId,\n\n          /******/\n          loaded: false\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.loaded = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n      __webpack_require__.p = \"http://localhost:8080/dist\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(0);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      //Promise polyfill https://github.com/taylorhakes/promise-polyfill\n      if (typeof Promise !== 'function') {\n        window.Promise = __webpack_require__(1);\n      }\n\n      var Barba = {\n        version: '1.0.0',\n        BaseTransition: __webpack_require__(4),\n        BaseView: __webpack_require__(6),\n        BaseCache: __webpack_require__(8),\n        Dispatcher: __webpack_require__(7),\n        HistoryManager: __webpack_require__(9),\n        Pjax: __webpack_require__(10),\n        Prefetch: __webpack_require__(13),\n        Utils: __webpack_require__(5)\n      };\n      module.exports = Barba;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /* WEBPACK VAR INJECTION */\n      (function (setImmediate) {\n        (function (root) {\n          // Store setTimeout reference so promise-polyfill will be unaffected by\n          // other code modifying setTimeout (like sinon.useFakeTimers())\n          var setTimeoutFunc = setTimeout;\n\n          function noop() {} // Use polyfill for setImmediate for performance gains\n\n\n          var asap = typeof setImmediate === 'function' && setImmediate || function (fn) {\n            setTimeoutFunc(fn, 0);\n          };\n\n          var onUnhandledRejection = function onUnhandledRejection(err) {\n            if (typeof console !== 'undefined' && console) {\n              console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n            }\n          }; // Polyfill for Function.prototype.bind\n\n\n          function bind(fn, thisArg) {\n            return function () {\n              fn.apply(thisArg, arguments);\n            };\n          }\n\n          function Promise(fn) {\n            if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n            if (typeof fn !== 'function') throw new TypeError('not a function');\n            this._state = 0;\n            this._handled = false;\n            this._value = undefined;\n            this._deferreds = [];\n            doResolve(fn, this);\n          }\n\n          function handle(self, deferred) {\n            while (self._state === 3) {\n              self = self._value;\n            }\n\n            if (self._state === 0) {\n              self._deferreds.push(deferred);\n\n              return;\n            }\n\n            self._handled = true;\n            asap(function () {\n              var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\n              if (cb === null) {\n                (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n                return;\n              }\n\n              var ret;\n\n              try {\n                ret = cb(self._value);\n              } catch (e) {\n                reject(deferred.promise, e);\n                return;\n              }\n\n              resolve(deferred.promise, ret);\n            });\n          }\n\n          function resolve(self, newValue) {\n            try {\n              // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n              if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n\n              if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n                var then = newValue.then;\n\n                if (newValue instanceof Promise) {\n                  self._state = 3;\n                  self._value = newValue;\n                  finale(self);\n                  return;\n                } else if (typeof then === 'function') {\n                  doResolve(bind(then, newValue), self);\n                  return;\n                }\n              }\n\n              self._state = 1;\n              self._value = newValue;\n              finale(self);\n            } catch (e) {\n              reject(self, e);\n            }\n          }\n\n          function reject(self, newValue) {\n            self._state = 2;\n            self._value = newValue;\n            finale(self);\n          }\n\n          function finale(self) {\n            if (self._state === 2 && self._deferreds.length === 0) {\n              asap(function () {\n                if (!self._handled) {\n                  onUnhandledRejection(self._value);\n                }\n              });\n            }\n\n            for (var i = 0, len = self._deferreds.length; i < len; i++) {\n              handle(self, self._deferreds[i]);\n            }\n\n            self._deferreds = null;\n          }\n\n          function Handler(onFulfilled, onRejected, promise) {\n            this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n            this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n            this.promise = promise;\n          }\n          /**\n           * Take a potentially misbehaving resolver function and make sure\n           * onFulfilled and onRejected are only called once.\n           *\n           * Makes no guarantees about asynchrony.\n           */\n\n\n          function doResolve(fn, self) {\n            var done = false;\n\n            try {\n              fn(function (value) {\n                if (done) return;\n                done = true;\n                resolve(self, value);\n              }, function (reason) {\n                if (done) return;\n                done = true;\n                reject(self, reason);\n              });\n            } catch (ex) {\n              if (done) return;\n              done = true;\n              reject(self, ex);\n            }\n          }\n\n          Promise.prototype['catch'] = function (onRejected) {\n            return this.then(null, onRejected);\n          };\n\n          Promise.prototype.then = function (onFulfilled, onRejected) {\n            var prom = new this.constructor(noop);\n            handle(this, new Handler(onFulfilled, onRejected, prom));\n            return prom;\n          };\n\n          Promise.all = function (arr) {\n            var args = Array.prototype.slice.call(arr);\n            return new Promise(function (resolve, reject) {\n              if (args.length === 0) return resolve([]);\n              var remaining = args.length;\n\n              function res(i, val) {\n                try {\n                  if (val && (typeof val === 'object' || typeof val === 'function')) {\n                    var then = val.then;\n\n                    if (typeof then === 'function') {\n                      then.call(val, function (val) {\n                        res(i, val);\n                      }, reject);\n                      return;\n                    }\n                  }\n\n                  args[i] = val;\n\n                  if (--remaining === 0) {\n                    resolve(args);\n                  }\n                } catch (ex) {\n                  reject(ex);\n                }\n              }\n\n              for (var i = 0; i < args.length; i++) {\n                res(i, args[i]);\n              }\n            });\n          };\n\n          Promise.resolve = function (value) {\n            if (value && typeof value === 'object' && value.constructor === Promise) {\n              return value;\n            }\n\n            return new Promise(function (resolve) {\n              resolve(value);\n            });\n          };\n\n          Promise.reject = function (value) {\n            return new Promise(function (resolve, reject) {\n              reject(value);\n            });\n          };\n\n          Promise.race = function (values) {\n            return new Promise(function (resolve, reject) {\n              for (var i = 0, len = values.length; i < len; i++) {\n                values[i].then(resolve, reject);\n              }\n            });\n          };\n          /**\n           * Set the immediate function to execute callbacks\n           * @param fn {function} Function to execute\n           * @private\n           */\n\n\n          Promise._setImmediateFn = function _setImmediateFn(fn) {\n            asap = fn;\n          };\n\n          Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n            onUnhandledRejection = fn;\n          };\n\n          if (typeof module !== 'undefined' && module.exports) {\n            module.exports = Promise;\n          } else if (!root.Promise) {\n            root.Promise = Promise;\n          }\n        })(this);\n        /* WEBPACK VAR INJECTION */\n\n      }).call(exports, __webpack_require__(2).setImmediate);\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /* WEBPACK VAR INJECTION */\n      (function (setImmediate, clearImmediate) {\n        var nextTick = __webpack_require__(3).nextTick;\n\n        var apply = Function.prototype.apply;\n        var slice = Array.prototype.slice;\n        var immediateIds = {};\n        var nextImmediateId = 0; // DOM APIs, for completeness\n\n        exports.setTimeout = function () {\n          return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n        };\n\n        exports.setInterval = function () {\n          return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n        };\n\n        exports.clearTimeout = exports.clearInterval = function (timeout) {\n          timeout.close();\n        };\n\n        function Timeout(id, clearFn) {\n          this._id = id;\n          this._clearFn = clearFn;\n        }\n\n        Timeout.prototype.unref = Timeout.prototype.ref = function () {};\n\n        Timeout.prototype.close = function () {\n          this._clearFn.call(window, this._id);\n        }; // Does not start the time, just sets up the members needed.\n\n\n        exports.enroll = function (item, msecs) {\n          clearTimeout(item._idleTimeoutId);\n          item._idleTimeout = msecs;\n        };\n\n        exports.unenroll = function (item) {\n          clearTimeout(item._idleTimeoutId);\n          item._idleTimeout = -1;\n        };\n\n        exports._unrefActive = exports.active = function (item) {\n          clearTimeout(item._idleTimeoutId);\n          var msecs = item._idleTimeout;\n\n          if (msecs >= 0) {\n            item._idleTimeoutId = setTimeout(function onTimeout() {\n              if (item._onTimeout) item._onTimeout();\n            }, msecs);\n          }\n        }; // That's not how node.js implements it but the exposed api is the same.\n\n\n        exports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function (fn) {\n          var id = nextImmediateId++;\n          var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n          immediateIds[id] = true;\n          nextTick(function onNextTick() {\n            if (immediateIds[id]) {\n              // fn.call() is faster so we optimize for the common use-case\n              // @see http://jsperf.com/call-apply-segu\n              if (args) {\n                fn.apply(null, args);\n              } else {\n                fn.call(null);\n              } // Prevent ids from leaking\n\n\n              exports.clearImmediate(id);\n            }\n          });\n          return id;\n        };\n        exports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function (id) {\n          delete immediateIds[id];\n        };\n        /* WEBPACK VAR INJECTION */\n      }).call(exports, __webpack_require__(2).setImmediate, __webpack_require__(2).clearImmediate);\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports) {\n      // shim for using process in browser\n      var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n      // don't break things.  But we need to wrap it in a try catch in case it is\n      // wrapped in strict mode code which doesn't define any globals.  It's inside a\n      // function because try/catches deoptimize in certain engines.\n\n      var cachedSetTimeout;\n      var cachedClearTimeout;\n\n      (function () {\n        try {\n          cachedSetTimeout = setTimeout;\n        } catch (e) {\n          cachedSetTimeout = function () {\n            throw new Error('setTimeout is not defined');\n          };\n        }\n\n        try {\n          cachedClearTimeout = clearTimeout;\n        } catch (e) {\n          cachedClearTimeout = function () {\n            throw new Error('clearTimeout is not defined');\n          };\n        }\n      })();\n\n      var queue = [];\n      var draining = false;\n      var currentQueue;\n      var queueIndex = -1;\n\n      function cleanUpNextTick() {\n        if (!draining || !currentQueue) {\n          return;\n        }\n\n        draining = false;\n\n        if (currentQueue.length) {\n          queue = currentQueue.concat(queue);\n        } else {\n          queueIndex = -1;\n        }\n\n        if (queue.length) {\n          drainQueue();\n        }\n      }\n\n      function drainQueue() {\n        if (draining) {\n          return;\n        }\n\n        var timeout = cachedSetTimeout(cleanUpNextTick);\n        draining = true;\n        var len = queue.length;\n\n        while (len) {\n          currentQueue = queue;\n          queue = [];\n\n          while (++queueIndex < len) {\n            if (currentQueue) {\n              currentQueue[queueIndex].run();\n            }\n          }\n\n          queueIndex = -1;\n          len = queue.length;\n        }\n\n        currentQueue = null;\n        draining = false;\n        cachedClearTimeout(timeout);\n      }\n\n      process.nextTick = function (fun) {\n        var args = new Array(arguments.length - 1);\n\n        if (arguments.length > 1) {\n          for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n          }\n        }\n\n        queue.push(new Item(fun, args));\n\n        if (queue.length === 1 && !draining) {\n          cachedSetTimeout(drainQueue, 0);\n        }\n      }; // v8 likes predictible objects\n\n\n      function Item(fun, array) {\n        this.fun = fun;\n        this.array = array;\n      }\n\n      Item.prototype.run = function () {\n        this.fun.apply(null, this.array);\n      };\n\n      process.title = 'browser';\n      process.browser = true;\n      process.env = {};\n      process.argv = [];\n      process.version = ''; // empty string to avoid regexp issues\n\n      process.versions = {};\n\n      function noop() {}\n\n      process.on = noop;\n      process.addListener = noop;\n      process.once = noop;\n      process.off = noop;\n      process.removeListener = noop;\n      process.removeAllListeners = noop;\n      process.emit = noop;\n\n      process.binding = function (name) {\n        throw new Error('process.binding is not supported');\n      };\n\n      process.cwd = function () {\n        return '/';\n      };\n\n      process.chdir = function (dir) {\n        throw new Error('process.chdir is not supported');\n      };\n\n      process.umask = function () {\n        return 0;\n      };\n      /***/\n\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var Utils = __webpack_require__(5);\n      /**\n       * BaseTransition to extend\n       *\n       * @namespace Barba.BaseTransition\n       * @type {Object}\n       */\n\n\n      var BaseTransition = {\n        /**\n         * @memberOf Barba.BaseTransition\n         * @type {HTMLElement}\n         */\n        oldContainer: undefined,\n\n        /**\n         * @memberOf Barba.BaseTransition\n         * @type {HTMLElement}\n         */\n        newContainer: undefined,\n\n        /**\n         * @memberOf Barba.BaseTransition\n         * @type {Promise}\n         */\n        newContainerLoading: undefined,\n\n        /**\n         * Helper to extend the object\n         *\n         * @memberOf Barba.BaseTransition\n         * @param  {Object} newObject\n         * @return {Object} newInheritObject\n         */\n        extend: function (obj) {\n          return Utils.extend(this, obj);\n        },\n\n        /**\n         * This function is called from Pjax module to initialize\n         * the transition.\n         *\n         * @memberOf Barba.BaseTransition\n         * @private\n         * @param  {HTMLElement} oldContainer\n         * @param  {Promise} newContainer\n         * @return {Promise}\n         */\n        init: function (oldContainer, newContainer) {\n          var _this = this;\n\n          this.oldContainer = oldContainer;\n          this._newContainerPromise = newContainer;\n          this.deferred = Utils.deferred();\n          this.newContainerReady = Utils.deferred();\n          this.newContainerLoading = this.newContainerReady.promise;\n          this.start();\n\n          this._newContainerPromise.then(function (newContainer) {\n            _this.newContainer = newContainer;\n\n            _this.newContainerReady.resolve();\n          });\n\n          return this.deferred.promise;\n        },\n\n        /**\n         * This function needs to be called as soon the Transition is finished\n         *\n         * @memberOf Barba.BaseTransition\n         */\n        done: function () {\n          this.oldContainer.parentNode.removeChild(this.oldContainer);\n          this.newContainer.style.visibility = 'visible';\n          this.deferred.resolve();\n        },\n\n        /**\n         * Constructor for your Transition\n         *\n         * @memberOf Barba.BaseTransition\n         * @abstract\n         */\n        start: function () {}\n      };\n      module.exports = BaseTransition;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Just an object with some helpful functions\n       *\n       * @type {Object}\n       * @namespace Barba.Utils\n       */\n      var Utils = {\n        /**\n         * Return the current url\n         *\n         * @memberOf Barba.Utils\n         * @return {String} currentUrl\n         */\n        getCurrentUrl: function () {\n          return window.location.protocol + '//' + window.location.host + window.location.pathname + window.location.search;\n        },\n\n        /**\n         * Given an url, return it without the hash\n         *\n         * @memberOf Barba.Utils\n         * @private\n         * @param  {String} url\n         * @return {String} newCleanUrl\n         */\n        cleanLink: function (url) {\n          return url.replace(/#.*/, '');\n        },\n\n        /**\n         * Time in millisecond after the xhr request goes in timeout\n         *\n         * @memberOf Barba.Utils\n         * @type {Number}\n         * @default\n         */\n        xhrTimeout: 5000,\n\n        /**\n         * Start an XMLHttpRequest() and return a Promise\n         *\n         * @memberOf Barba.Utils\n         * @param  {String} url\n         * @return {Promise}\n         */\n        xhr: function (url) {\n          var deferred = this.deferred();\n          var req = new XMLHttpRequest();\n\n          req.onreadystatechange = function () {\n            if (req.readyState === 4) {\n              if (req.status === 200) {\n                return deferred.resolve(req.responseText);\n              } else {\n                return deferred.reject(new Error('xhr: HTTP code is not 200'));\n              }\n            }\n          };\n\n          req.ontimeout = function () {\n            return deferred.reject(new Error('xhr: Timeout exceeded'));\n          };\n\n          req.open('GET', url);\n          req.timeout = this.xhrTimeout;\n          req.setRequestHeader('x-barba', 'yes');\n          req.send();\n          return deferred.promise;\n        },\n\n        /**\n         * Get obj and props and return a new object with the property merged\n         *\n         * @memberOf Barba.Utils\n         * @param  {object} obj\n         * @param  {object} props\n         * @return {object}\n         */\n        extend: function (obj, props) {\n          var newObj = Object.create(obj);\n\n          for (var prop in props) {\n            if (props.hasOwnProperty(prop)) {\n              newObj[prop] = props[prop];\n            }\n          }\n\n          return newObj;\n        },\n\n        /**\n         * Return a new \"Deferred\" object\n         * https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Deferred\n         *\n         * @memberOf Barba.Utils\n         * @return {Deferred}\n         */\n        deferred: function () {\n          return new function () {\n            this.resolve = null;\n            this.reject = null;\n            this.promise = new Promise(function (resolve, reject) {\n              this.resolve = resolve;\n              this.reject = reject;\n            }.bind(this));\n          }();\n        },\n\n        /**\n         * Return the port number normalized, eventually you can pass a string to be normalized.\n         *\n         * @memberOf Barba.Utils\n         * @private\n         * @param  {String} p\n         * @return {Int} port\n         */\n        getPort: function (p) {\n          var port = typeof p !== 'undefined' ? p : window.location.port;\n          var protocol = window.location.protocol;\n          if (port != '') return parseInt(port);\n          if (protocol === 'http:') return 80;\n          if (protocol === 'https:') return 443;\n        }\n      };\n      module.exports = Utils;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var Dispatcher = __webpack_require__(7);\n\n      var Utils = __webpack_require__(5);\n      /**\n       * BaseView to be extended\n       *\n       * @namespace Barba.BaseView\n       * @type {Object}\n       */\n\n\n      var BaseView = {\n        /**\n         * Namespace of the view.\n         * (need to be associated with the data-namespace of the container)\n         *\n         * @memberOf Barba.BaseView\n         * @type {String}\n         */\n        namespace: null,\n\n        /**\n         * Helper to extend the object\n         *\n         * @memberOf Barba.BaseView\n         * @param  {Object} newObject\n         * @return {Object} newInheritObject\n         */\n        extend: function (obj) {\n          return Utils.extend(this, obj);\n        },\n\n        /**\n         * Init the view.\n         * P.S. Is suggested to init the view before starting Barba.Pjax.start(),\n         * in this way .onEnter() and .onEnterCompleted() will be fired for the current\n         * container when the page is loaded.\n         *\n         * @memberOf Barba.BaseView\n         */\n        init: function () {\n          var _this = this;\n\n          Dispatcher.on('initStateChange', function (newStatus, oldStatus) {\n            if (oldStatus && oldStatus.namespace === _this.namespace) _this.onLeave();\n          });\n          Dispatcher.on('newPageReady', function (newStatus, oldStatus, container) {\n            _this.container = container;\n            if (newStatus.namespace === _this.namespace) _this.onEnter();\n          });\n          Dispatcher.on('transitionCompleted', function (newStatus, oldStatus) {\n            if (newStatus.namespace === _this.namespace) _this.onEnterCompleted();\n            if (oldStatus && oldStatus.namespace === _this.namespace) _this.onLeaveCompleted();\n          });\n        },\n\n        /**\n         * This function will be fired when the container\n         * is ready and attached to the DOM.\n         *\n         * @memberOf Barba.BaseView\n         * @abstract\n         */\n        onEnter: function () {},\n\n        /**\n         * This function will be fired when the transition\n         * to this container has just finished.\n         *\n         * @memberOf Barba.BaseView\n         * @abstract\n         */\n        onEnterCompleted: function () {},\n\n        /**\n         * This function will be fired when the transition\n         * to a new container has just started.\n         *\n         * @memberOf Barba.BaseView\n         * @abstract\n         */\n        onLeave: function () {},\n\n        /**\n         * This function will be fired when the container\n         * has just been removed from the DOM.\n         *\n         * @memberOf Barba.BaseView\n         * @abstract\n         */\n        onLeaveCompleted: function () {}\n      };\n      module.exports = BaseView;\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Little Dispatcher inspired by MicroEvent.js\n       *\n       * @namespace Barba.Dispatcher\n       * @type {Object}\n       */\n      var Dispatcher = {\n        /**\n         * Object that keeps all the events\n         *\n         * @memberOf Barba.Dispatcher\n         * @readOnly\n         * @type {Object}\n         */\n        events: {},\n\n        /**\n         * Bind a callback to an event\n         *\n         * @memberOf Barba.Dispatcher\n         * @param  {String} eventName\n         * @param  {Function} function\n         */\n        on: function (e, f) {\n          this.events[e] = this.events[e] || [];\n          this.events[e].push(f);\n        },\n\n        /**\n         * Unbind event\n         *\n         * @memberOf Barba.Dispatcher\n         * @param  {String} eventName\n         * @param  {Function} function\n         */\n        off: function (e, f) {\n          if (e in this.events === false) return;\n          this.events[e].splice(this.events[e].indexOf(f), 1);\n        },\n\n        /**\n         * Fire the event running all the event associated to it\n         *\n         * @memberOf Barba.Dispatcher\n         * @param  {String} eventName\n         * @param  {...*} args\n         */\n        trigger: function (e) {\n          //e, ...args\n          if (e in this.events === false) return;\n\n          for (var i = 0; i < this.events[e].length; i++) {\n            this.events[e][i].apply(this, Array.prototype.slice.call(arguments, 1));\n          }\n        }\n      };\n      module.exports = Dispatcher;\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var Utils = __webpack_require__(5);\n      /**\n       * BaseCache it's a simple static cache\n       *\n       * @namespace Barba.BaseCache\n       * @type {Object}\n       */\n\n\n      var BaseCache = {\n        /**\n         * The Object that keeps all the key value information\n         *\n         * @memberOf Barba.BaseCache\n         * @type {Object}\n         */\n        data: {},\n\n        /**\n         * Helper to extend this object\n         *\n         * @memberOf Barba.BaseCache\n         * @private\n         * @param  {Object} newObject\n         * @return {Object} newInheritObject\n         */\n        extend: function (obj) {\n          return Utils.extend(this, obj);\n        },\n\n        /**\n         * Set a key and value data, mainly Barba is going to save promises\n         *\n         * @memberOf Barba.BaseCache\n         * @param {String} key\n         * @param {*} value\n         */\n        set: function (key, val) {\n          this.data[key] = val;\n        },\n\n        /**\n         * Retrieve the data using the key\n         *\n         * @memberOf Barba.BaseCache\n         * @param  {String} key\n         * @return {*}\n         */\n        get: function (key) {\n          return this.data[key];\n        },\n\n        /**\n         * Flush the cache\n         *\n         * @memberOf Barba.BaseCache\n         */\n        reset: function () {\n          this.data = {};\n        }\n      };\n      module.exports = BaseCache;\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * HistoryManager helps to keep track of the navigation\n       *\n       * @namespace Barba.HistoryManager\n       * @type {Object}\n       */\n      var HistoryManager = {\n        /**\n         * Keep track of the status in historic order\n         *\n         * @memberOf Barba.HistoryManager\n         * @readOnly\n         * @type {Array}\n         */\n        history: [],\n\n        /**\n         * Add a new set of url and namespace\n         *\n         * @memberOf Barba.HistoryManager\n         * @param {String} url\n         * @param {String} namespace\n         * @private\n         */\n        add: function (url, namespace) {\n          if (!namespace) namespace = undefined;\n          this.history.push({\n            url: url,\n            namespace: namespace\n          });\n        },\n\n        /**\n         * Return information about the current status\n         *\n         * @memberOf Barba.HistoryManager\n         * @return {Object}\n         */\n        currentStatus: function () {\n          return this.history[this.history.length - 1];\n        },\n\n        /**\n         * Return information about the previous status\n         *\n         * @memberOf Barba.HistoryManager\n         * @return {Object}\n         */\n        prevStatus: function () {\n          var history = this.history;\n          if (history.length < 2) return null;\n          return history[history.length - 2];\n        }\n      };\n      module.exports = HistoryManager;\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var Utils = __webpack_require__(5);\n\n      var Dispatcher = __webpack_require__(7);\n\n      var HideShowTransition = __webpack_require__(11);\n\n      var BaseCache = __webpack_require__(8);\n\n      var HistoryManager = __webpack_require__(9);\n\n      var Dom = __webpack_require__(12);\n      /**\n       * Pjax is a static object with main function\n       *\n       * @namespace Barba.Pjax\n       * @borrows Dom as Dom\n       * @type {Object}\n       */\n\n\n      var Pjax = {\n        Dom: Dom,\n        History: HistoryManager,\n        Cache: BaseCache,\n\n        /**\n         * Indicate wether or not use the cache\n         *\n         * @memberOf Barba.Pjax\n         * @type {Boolean}\n         * @default\n         */\n        cacheEnabled: true,\n\n        /**\n         * Indicate if there is an animation in progress\n         *\n         * @memberOf Barba.Pjax\n         * @readOnly\n         * @type {Boolean}\n         */\n        transitionProgress: false,\n\n        /**\n         * Class name used to ignore links\n         *\n         * @memberOf Barba.Pjax\n         * @type {String}\n         * @default\n         */\n        ignoreClassLink: 'no-barba',\n\n        /**\n         * Function to be called to start Pjax\n         *\n         * @memberOf Barba.Pjax\n         */\n        start: function () {\n          this.init();\n        },\n\n        /**\n         * Init the events\n         *\n         * @memberOf Barba.Pjax\n         * @private\n         */\n        init: function () {\n          var container = this.Dom.getContainer();\n          var wrapper = this.Dom.getWrapper();\n          wrapper.setAttribute('aria-live', 'polite');\n          this.History.add(this.getCurrentUrl(), this.Dom.getNamespace(container)); //Fire for the current view.\n\n          Dispatcher.trigger('initStateChange', this.History.currentStatus());\n          Dispatcher.trigger('newPageReady', this.History.currentStatus(), {}, container, this.Dom.currentHTML);\n          Dispatcher.trigger('transitionCompleted', this.History.currentStatus());\n          this.bindEvents();\n        },\n\n        /**\n         * Attach the eventlisteners\n         *\n         * @memberOf Barba.Pjax\n         * @private\n         */\n        bindEvents: function () {\n          document.addEventListener('click', this.onLinkClick.bind(this));\n          window.addEventListener('popstate', this.onStateChange.bind(this));\n        },\n\n        /**\n         * Return the currentURL cleaned\n         *\n         * @memberOf Barba.Pjax\n         * @return {String} currentUrl\n         */\n        getCurrentUrl: function () {\n          return Utils.cleanLink(Utils.getCurrentUrl());\n        },\n\n        /**\n         * Change the URL with pushstate and trigger the state change\n         *\n         * @memberOf Barba.Pjax\n         * @param {String} newUrl\n         */\n        goTo: function (url) {\n          window.history.pushState(null, null, url);\n          this.onStateChange();\n        },\n\n        /**\n         * Force the browser to go to a certain url\n         *\n         * @memberOf Barba.Pjax\n         * @param {String} url\n         * @private\n         */\n        forceGoTo: function (url) {\n          window.location = url;\n        },\n\n        /**\n         * Load an url, will start an xhr request or load from the cache\n         *\n         * @memberOf Barba.Pjax\n         * @private\n         * @param  {String} url\n         * @return {Promise}\n         */\n        load: function (url) {\n          var deferred = Utils.deferred();\n\n          var _this = this;\n\n          var xhr;\n          xhr = this.Cache.get(url);\n\n          if (!xhr) {\n            xhr = Utils.xhr(url);\n            this.Cache.set(url, xhr);\n          }\n\n          xhr.then(function (data) {\n            var container = _this.Dom.parseResponse(data);\n\n            _this.Dom.putContainer(container);\n\n            if (!_this.cacheEnabled) _this.Cache.reset();\n            deferred.resolve(container);\n          }, function () {\n            //Something went wrong (timeout, 404, 505...)\n            _this.forceGoTo(url);\n\n            deferred.reject();\n          });\n          return deferred.promise;\n        },\n\n        /**\n         * Get the .href parameter out of an element\n         * and handle special cases (like xlink:href)\n         *\n         * @private\n         * @memberOf Barba.Pjax\n         * @param  {HTMLElement} el\n         * @return {String} href\n         */\n        getHref: function (el) {\n          if (!el) {\n            return undefined;\n          }\n\n          if (el.getAttribute && typeof el.getAttribute('xlink:href') === 'string') {\n            return el.getAttribute('xlink:href');\n          }\n\n          if (typeof el.href === 'string') {\n            return el.href;\n          }\n\n          return undefined;\n        },\n\n        /**\n         * Callback called from click event\n         *\n         * @memberOf Barba.Pjax\n         * @private\n         * @param {MouseEvent} evt\n         */\n        onLinkClick: function (evt) {\n          var el = evt.target; //Go up in the nodelist until we\n          //find something with an href\n\n          while (el && !this.getHref(el)) {\n            el = el.parentNode;\n          }\n\n          if (this.preventCheck(evt, el)) {\n            evt.stopPropagation();\n            evt.preventDefault();\n            Dispatcher.trigger('linkClicked', el, evt);\n            var href = this.getHref(el);\n            this.goTo(href);\n          }\n        },\n\n        /**\n         * Determine if the link should be followed\n         *\n         * @memberOf Barba.Pjax\n         * @param  {MouseEvent} evt\n         * @param  {HTMLElement} element\n         * @return {Boolean}\n         */\n        preventCheck: function (evt, element) {\n          if (!window.history.pushState) return false;\n          var href = this.getHref(element); //User\n\n          if (!element || !href) return false; //Middle click, cmd click, and ctrl click\n\n          if (evt.which > 1 || evt.metaKey || evt.ctrlKey || evt.shiftKey || evt.altKey) return false; //Ignore target with _blank target\n\n          if (element.target && element.target === '_blank') return false; //Check if it's the same domain\n\n          if (window.location.protocol !== element.protocol || window.location.hostname !== element.hostname) return false; //Check if the port is the same\n\n          if (Utils.getPort() !== Utils.getPort(element.port)) return false; //Ignore case when a hash is being tacked on the current URL\n\n          if (href.indexOf('#') > -1) return false; //Ignore case where there is download attribute\n\n          if (element.getAttribute && typeof element.getAttribute('download') === 'string') return false; //In case you're trying to load the same page\n\n          if (Utils.cleanLink(href) == Utils.cleanLink(location.href)) return false;\n          if (element.classList.contains(this.ignoreClassLink)) return false;\n          return true;\n        },\n\n        /**\n         * Return a transition object\n         *\n         * @memberOf Barba.Pjax\n         * @return {Barba.Transition} Transition object\n         */\n        getTransition: function () {\n          //User customizable\n          return HideShowTransition;\n        },\n\n        /**\n         * Method called after a 'popstate' or from .goTo()\n         *\n         * @memberOf Barba.Pjax\n         * @private\n         */\n        onStateChange: function () {\n          var newUrl = this.getCurrentUrl();\n          if (this.transitionProgress) this.forceGoTo(newUrl);\n          if (this.History.currentStatus().url === newUrl) return false;\n          this.History.add(newUrl);\n          var newContainer = this.load(newUrl);\n          var transition = Object.create(this.getTransition());\n          this.transitionProgress = true;\n          Dispatcher.trigger('initStateChange', this.History.currentStatus(), this.History.prevStatus());\n          var transitionInstance = transition.init(this.Dom.getContainer(), newContainer);\n          newContainer.then(this.onNewContainerLoaded.bind(this));\n          transitionInstance.then(this.onTransitionEnd.bind(this));\n        },\n\n        /**\n         * Function called as soon the new container is ready\n         *\n         * @memberOf Barba.Pjax\n         * @private\n         * @param {HTMLElement} container\n         */\n        onNewContainerLoaded: function (container) {\n          var currentStatus = this.History.currentStatus();\n          currentStatus.namespace = this.Dom.getNamespace(container);\n          Dispatcher.trigger('newPageReady', this.History.currentStatus(), this.History.prevStatus(), container, this.Dom.currentHTML);\n        },\n\n        /**\n         * Function called as soon the transition is finished\n         *\n         * @memberOf Barba.Pjax\n         * @private\n         */\n        onTransitionEnd: function () {\n          this.transitionProgress = false;\n          Dispatcher.trigger('transitionCompleted', this.History.currentStatus(), this.History.prevStatus());\n        }\n      };\n      module.exports = Pjax;\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var BaseTransition = __webpack_require__(4);\n      /**\n       * Basic Transition object, wait for the new Container to be ready,\n       * scroll top, and finish the transition (removing the old container and displaying the new one)\n       *\n       * @private\n       * @namespace Barba.HideShowTransition\n       * @augments Barba.BaseTransition\n       */\n\n\n      var HideShowTransition = BaseTransition.extend({\n        start: function () {\n          this.newContainerLoading.then(this.finish.bind(this));\n        },\n        finish: function () {\n          document.body.scrollTop = 0;\n          this.done();\n        }\n      });\n      module.exports = HideShowTransition;\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Object that is going to deal with DOM parsing/manipulation\n       *\n       * @namespace Barba.Pjax.Dom\n       * @type {Object}\n       */\n      var Dom = {\n        /**\n         * The name of the data attribute on the container\n         *\n         * @memberOf Barba.Pjax.Dom\n         * @type {String}\n         * @default\n         */\n        dataNamespace: 'namespace',\n\n        /**\n         * Id of the main wrapper\n         *\n         * @memberOf Barba.Pjax.Dom\n         * @type {String}\n         * @default\n         */\n        wrapperId: 'barba-wrapper',\n\n        /**\n         * Class name used to identify the containers\n         *\n         * @memberOf Barba.Pjax.Dom\n         * @type {String}\n         * @default\n         */\n        containerClass: 'barba-container',\n\n        /**\n         * Full HTML String of the current page.\n         * By default is the innerHTML of the initial loaded page.\n         *\n         * Each time a new page is loaded, the value is the response of the xhr call.\n         *\n         * @memberOf Barba.Pjax.Dom\n         * @type {String}\n         */\n        currentHTML: document.documentElement.innerHTML,\n\n        /**\n         * Parse the responseText obtained from the xhr call\n         *\n         * @memberOf Barba.Pjax.Dom\n         * @private\n         * @param  {String} responseText\n         * @return {HTMLElement}\n         */\n        parseResponse: function (responseText) {\n          this.currentHTML = responseText;\n          var wrapper = document.createElement('div');\n          wrapper.innerHTML = responseText;\n          var titleEl = wrapper.querySelector('title');\n          if (titleEl) document.title = titleEl.textContent;\n          return this.getContainer(wrapper);\n        },\n\n        /**\n         * Get the main barba wrapper by the ID `wrapperId`\n         *\n         * @memberOf Barba.Pjax.Dom\n         * @return {HTMLElement} element\n         */\n        getWrapper: function () {\n          var wrapper = document.getElementById(this.wrapperId);\n          if (!wrapper) throw new Error('Barba.js: wrapper not found!');\n          return wrapper;\n        },\n\n        /**\n         * Get the container on the current DOM,\n         * or from an HTMLElement passed via argument\n         *\n         * @memberOf Barba.Pjax.Dom\n         * @private\n         * @param  {HTMLElement} element\n         * @return {HTMLElement}\n         */\n        getContainer: function (element) {\n          if (!element) element = document.body;\n          if (!element) throw new Error('Barba.js: DOM not ready!');\n          var container = this.parseContainer(element);\n          if (container && container.jquery) container = container[0];\n          if (!container) throw new Error('Barba.js: no container found');\n          return container;\n        },\n\n        /**\n         * Get the namespace of the container\n         *\n         * @memberOf Barba.Pjax.Dom\n         * @private\n         * @param  {HTMLElement} element\n         * @return {String}\n         */\n        getNamespace: function (element) {\n          if (element && element.dataset) {\n            return element.dataset[this.dataNamespace];\n          } else if (element) {\n            return element.getAttribute('data-' + this.dataNamespace);\n          }\n\n          return null;\n        },\n\n        /**\n         * Put the container on the page\n         *\n         * @memberOf Barba.Pjax.Dom\n         * @private\n         * @param  {HTMLElement} element\n         */\n        putContainer: function (element) {\n          element.style.visibility = 'hidden';\n          var wrapper = this.getWrapper();\n          wrapper.appendChild(element);\n        },\n\n        /**\n         * Get container selector\n         *\n         * @memberOf Barba.Pjax.Dom\n         * @private\n         * @param  {HTMLElement} element\n         * @return {HTMLElement} element\n         */\n        parseContainer: function (element) {\n          return element.querySelector('.' + this.containerClass);\n        }\n      };\n      module.exports = Dom;\n      /***/\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var Utils = __webpack_require__(5);\n\n      var Pjax = __webpack_require__(10);\n      /**\n       * Prefetch\n       *\n       * @namespace Barba.Prefetch\n       * @type {Object}\n       */\n\n\n      var Prefetch = {\n        /**\n         * Class name used to ignore prefetch on links\n         *\n         * @memberOf Barba.Prefetch\n         * @type {String}\n         * @default\n         */\n        ignoreClassLink: 'no-barba-prefetch',\n\n        /**\n         * Init the event listener on mouseover and touchstart\n         * for the prefetch\n         *\n         * @memberOf Barba.Prefetch\n         */\n        init: function () {\n          if (!window.history.pushState) {\n            return false;\n          }\n\n          document.body.addEventListener('mouseover', this.onLinkEnter.bind(this));\n          document.body.addEventListener('touchstart', this.onLinkEnter.bind(this));\n        },\n\n        /**\n         * Callback for the mousehover/touchstart\n         *\n         * @memberOf Barba.Prefetch\n         * @private\n         * @param  {Object} evt\n         */\n        onLinkEnter: function (evt) {\n          var el = evt.target;\n\n          while (el && !Pjax.getHref(el)) {\n            el = el.parentNode;\n          }\n\n          if (!el || el.classList.contains(this.ignoreClassLink)) {\n            return;\n          }\n\n          var url = Pjax.getHref(el); //Check if the link is elegible for Pjax\n\n          if (Pjax.preventCheck(evt, el) && !Pjax.Cache.get(url)) {\n            var xhr = Utils.xhr(url);\n            Pjax.Cache.set(url, xhr);\n          }\n        }\n      };\n      module.exports = Prefetch;\n      /***/\n    }\n    /******/\n    ])\n  );\n});\n\n;","map":{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap e7fc33bf106238f6ba36","webpack:///index.js","webpack:///~/promise-polyfill/promise.js","webpack:///~/timers-browserify/main.js","webpack:///~/process/browser.js","webpack:///Transition/BaseTransition.js","webpack:///Utils/Utils.js","webpack:///View/BaseView.js","webpack:///Dispatcher/Dispatcher.js","webpack:///Cache/BaseCache.js","webpack:///Pjax/HistoryManager.js","webpack:///Pjax/Pjax.js","webpack:///Transition/HideShowTransition.js","webpack:///Pjax/Dom.js","webpack:///Pjax/Prefetch.js"],"names":[],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Barba\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Barba\"] = factory();\n\telse\n\t\troot[\"Barba\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"http://localhost:8080/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e7fc33bf106238f6ba36\n **/","//Promise polyfill https://github.com/taylorhakes/promise-polyfill\n\nif (typeof Promise !== 'function') {\n window.Promise = require('promise-polyfill');\n}\n\nvar Barba = {\n  version: '1.0.0',\n  BaseTransition: require('./Transition/BaseTransition'),\n  BaseView: require('./View/BaseView'),\n  BaseCache: require('./Cache/BaseCache'),\n  Dispatcher: require('./Dispatcher/Dispatcher'),\n  HistoryManager: require('./Pjax/HistoryManager'),\n  Pjax: require('./Pjax/Pjax'),\n  Prefetch: require('./Pjax/Prefetch'),\n  Utils: require('./Utils/Utils')\n};\n\nmodule.exports = Barba;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {\n  }\n\n  // Use polyfill for setImmediate for performance gains\n  var asap = (typeof setImmediate === 'function' && setImmediate) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  var onUnhandledRejection = function onUnhandledRejection(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    asap(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      asap(function() {\n        if (!self._handled) {\n          onUnhandledRejection(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    var args = Array.prototype.slice.call(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @private\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    asap = fn;\n  };\n\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    onUnhandledRejection = fn;\n  };\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/promise-polyfill/promise.js\n ** module id = 1\n ** module chunks = 0\n **/","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/timers-browserify/main.js\n ** module id = 2\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\n(function () {\n  try {\n    cachedSetTimeout = setTimeout;\n  } catch (e) {\n    cachedSetTimeout = function () {\n      throw new Error('setTimeout is not defined');\n    }\n  }\n  try {\n    cachedClearTimeout = clearTimeout;\n  } catch (e) {\n    cachedClearTimeout = function () {\n      throw new Error('clearTimeout is not defined');\n    }\n  }\n} ())\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = cachedSetTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    cachedClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        cachedSetTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/process/browser.js\n ** module id = 3\n ** module chunks = 0\n **/","var Utils = require('../Utils/Utils.js');\n\n/**\n * BaseTransition to extend\n *\n * @namespace Barba.BaseTransition\n * @type {Object}\n */\nvar BaseTransition = {\n  /**\n   * @memberOf Barba.BaseTransition\n   * @type {HTMLElement}\n   */\n  oldContainer: undefined,\n\n  /**\n   * @memberOf Barba.BaseTransition\n   * @type {HTMLElement}\n   */\n  newContainer: undefined,\n\n  /**\n   * @memberOf Barba.BaseTransition\n   * @type {Promise}\n   */\n  newContainerLoading: undefined,\n\n  /**\n   * Helper to extend the object\n   *\n   * @memberOf Barba.BaseTransition\n   * @param  {Object} newObject\n   * @return {Object} newInheritObject\n   */\n  extend: function(obj){\n    return Utils.extend(this, obj);\n  },\n\n  /**\n   * This function is called from Pjax module to initialize\n   * the transition.\n   *\n   * @memberOf Barba.BaseTransition\n   * @private\n   * @param  {HTMLElement} oldContainer\n   * @param  {Promise} newContainer\n   * @return {Promise}\n   */\n  init: function(oldContainer, newContainer) {\n    var _this = this;\n\n    this.oldContainer = oldContainer;\n    this._newContainerPromise = newContainer;\n\n    this.deferred = Utils.deferred();\n    this.newContainerReady = Utils.deferred();\n    this.newContainerLoading = this.newContainerReady.promise;\n\n    this.start();\n\n    this._newContainerPromise.then(function(newContainer) {\n      _this.newContainer = newContainer;\n      _this.newContainerReady.resolve();\n    });\n\n    return this.deferred.promise;\n  },\n\n  /**\n   * This function needs to be called as soon the Transition is finished\n   *\n   * @memberOf Barba.BaseTransition\n   */\n  done: function() {\n    this.oldContainer.parentNode.removeChild(this.oldContainer);\n    this.newContainer.style.visibility = 'visible';\n    this.deferred.resolve();\n  },\n\n  /**\n   * Constructor for your Transition\n   *\n   * @memberOf Barba.BaseTransition\n   * @abstract\n   */\n  start: function() {},\n};\n\nmodule.exports = BaseTransition;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Transition/BaseTransition.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * Just an object with some helpful functions\n *\n * @type {Object}\n * @namespace Barba.Utils\n */\nvar Utils = {\n  /**\n   * Return the current url\n   *\n   * @memberOf Barba.Utils\n   * @return {String} currentUrl\n   */\n  getCurrentUrl: function() {\n    return window.location.protocol + '//' +\n           window.location.host +\n           window.location.pathname +\n           window.location.search;\n  },\n\n  /**\n   * Given an url, return it without the hash\n   *\n   * @memberOf Barba.Utils\n   * @private\n   * @param  {String} url\n   * @return {String} newCleanUrl\n   */\n  cleanLink: function(url) {\n    return url.replace(/#.*/, '');\n  },\n\n  /**\n   * Time in millisecond after the xhr request goes in timeout\n   *\n   * @memberOf Barba.Utils\n   * @type {Number}\n   * @default\n   */\n  xhrTimeout: 5000,\n\n  /**\n   * Start an XMLHttpRequest() and return a Promise\n   *\n   * @memberOf Barba.Utils\n   * @param  {String} url\n   * @return {Promise}\n   */\n  xhr: function(url) {\n    var deferred = this.deferred();\n    var req = new XMLHttpRequest();\n\n    req.onreadystatechange = function() {\n      if (req.readyState === 4) {\n        if (req.status === 200) {\n          return deferred.resolve(req.responseText);\n        } else {\n          return deferred.reject(new Error('xhr: HTTP code is not 200'));\n        }\n      }\n    };\n\n    req.ontimeout = function() {\n      return deferred.reject(new Error('xhr: Timeout exceeded'));\n    };\n\n    req.open('GET', url);\n    req.timeout = this.xhrTimeout;\n    req.setRequestHeader('x-barba', 'yes');\n    req.send();\n\n    return deferred.promise;\n  },\n\n  /**\n   * Get obj and props and return a new object with the property merged\n   *\n   * @memberOf Barba.Utils\n   * @param  {object} obj\n   * @param  {object} props\n   * @return {object}\n   */\n  extend: function(obj, props) {\n    var newObj = Object.create(obj);\n\n    for(var prop in props) {\n      if(props.hasOwnProperty(prop)) {\n        newObj[prop] = props[prop];\n      }\n    }\n\n    return newObj;\n  },\n\n  /**\n   * Return a new \"Deferred\" object\n   * https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Deferred\n   *\n   * @memberOf Barba.Utils\n   * @return {Deferred}\n   */\n  deferred: function() {\n    return new function() {\n      this.resolve = null;\n      this.reject = null;\n\n      this.promise = new Promise(function(resolve, reject) {\n        this.resolve = resolve;\n        this.reject = reject;\n      }.bind(this));\n    };\n  },\n\n  /**\n   * Return the port number normalized, eventually you can pass a string to be normalized.\n   *\n   * @memberOf Barba.Utils\n   * @private\n   * @param  {String} p\n   * @return {Int} port\n   */\n  getPort: function(p) {\n    var port = typeof p !== 'undefined' ? p : window.location.port;\n    var protocol = window.location.protocol;\n\n    if (port != '')\n      return parseInt(port);\n\n    if (protocol === 'http:')\n      return 80;\n\n    if (protocol === 'https:')\n      return 443;\n  }\n};\n\nmodule.exports = Utils;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Utils/Utils.js\n ** module id = 5\n ** module chunks = 0\n **/","var Dispatcher = require('../Dispatcher/Dispatcher');\nvar Utils = require('../Utils/Utils.js');\n\n/**\n * BaseView to be extended\n *\n * @namespace Barba.BaseView\n * @type {Object}\n */\nvar BaseView  = {\n  /**\n   * Namespace of the view.\n   * (need to be associated with the data-namespace of the container)\n   *\n   * @memberOf Barba.BaseView\n   * @type {String}\n   */\n  namespace: null,\n\n  /**\n   * Helper to extend the object\n   *\n   * @memberOf Barba.BaseView\n   * @param  {Object} newObject\n   * @return {Object} newInheritObject\n   */\n  extend: function(obj){\n    return Utils.extend(this, obj);\n  },\n\n  /**\n   * Init the view.\n   * P.S. Is suggested to init the view before starting Barba.Pjax.start(),\n   * in this way .onEnter() and .onEnterCompleted() will be fired for the current\n   * container when the page is loaded.\n   *\n   * @memberOf Barba.BaseView\n   */\n  init: function() {\n    var _this = this;\n\n    Dispatcher.on('initStateChange',\n      function(newStatus, oldStatus) {\n        if (oldStatus && oldStatus.namespace === _this.namespace)\n          _this.onLeave();\n      }\n    );\n\n    Dispatcher.on('newPageReady',\n      function(newStatus, oldStatus, container) {\n        _this.container = container;\n\n        if (newStatus.namespace === _this.namespace)\n          _this.onEnter();\n      }\n    );\n\n    Dispatcher.on('transitionCompleted',\n      function(newStatus, oldStatus) {\n        if (newStatus.namespace === _this.namespace)\n          _this.onEnterCompleted();\n\n        if (oldStatus && oldStatus.namespace === _this.namespace)\n          _this.onLeaveCompleted();\n      }\n    );\n  },\n\n /**\n  * This function will be fired when the container\n  * is ready and attached to the DOM.\n  *\n  * @memberOf Barba.BaseView\n  * @abstract\n  */\n  onEnter: function() {},\n\n  /**\n   * This function will be fired when the transition\n   * to this container has just finished.\n   *\n   * @memberOf Barba.BaseView\n   * @abstract\n   */\n  onEnterCompleted: function() {},\n\n  /**\n   * This function will be fired when the transition\n   * to a new container has just started.\n   *\n   * @memberOf Barba.BaseView\n   * @abstract\n   */\n  onLeave: function() {},\n\n  /**\n   * This function will be fired when the container\n   * has just been removed from the DOM.\n   *\n   * @memberOf Barba.BaseView\n   * @abstract\n   */\n  onLeaveCompleted: function() {}\n}\n\nmodule.exports = BaseView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./View/BaseView.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * Little Dispatcher inspired by MicroEvent.js\n *\n * @namespace Barba.Dispatcher\n * @type {Object}\n */\nvar Dispatcher = {\n  /**\n   * Object that keeps all the events\n   *\n   * @memberOf Barba.Dispatcher\n   * @readOnly\n   * @type {Object}\n   */\n  events: {},\n\n  /**\n   * Bind a callback to an event\n   *\n   * @memberOf Barba.Dispatcher\n   * @param  {String} eventName\n   * @param  {Function} function\n   */\n  on: function(e, f) {\n    this.events[e] = this.events[e] || [];\n    this.events[e].push(f);\n  },\n\n  /**\n   * Unbind event\n   *\n   * @memberOf Barba.Dispatcher\n   * @param  {String} eventName\n   * @param  {Function} function\n   */\n  off: function(e, f) {\n    if(e in this.events === false)\n      return;\n\n    this.events[e].splice(this.events[e].indexOf(f), 1);\n  },\n\n  /**\n   * Fire the event running all the event associated to it\n   *\n   * @memberOf Barba.Dispatcher\n   * @param  {String} eventName\n   * @param  {...*} args\n   */\n  trigger: function(e) {//e, ...args\n    if (e in this.events === false)\n      return;\n\n    for(var i = 0; i < this.events[e].length; i++){\n      this.events[e][i].apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n  }\n};\n\nmodule.exports = Dispatcher;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Dispatcher/Dispatcher.js\n ** module id = 7\n ** module chunks = 0\n **/","var Utils = require('../Utils/Utils.js');\n\n/**\n * BaseCache it's a simple static cache\n *\n * @namespace Barba.BaseCache\n * @type {Object}\n */\nvar BaseCache = {\n  /**\n   * The Object that keeps all the key value information\n   *\n   * @memberOf Barba.BaseCache\n   * @type {Object}\n   */\n  data: {},\n\n  /**\n   * Helper to extend this object\n   *\n   * @memberOf Barba.BaseCache\n   * @private\n   * @param  {Object} newObject\n   * @return {Object} newInheritObject\n   */\n  extend: function(obj) {\n    return Utils.extend(this, obj);\n  },\n\n  /**\n   * Set a key and value data, mainly Barba is going to save promises\n   *\n   * @memberOf Barba.BaseCache\n   * @param {String} key\n   * @param {*} value\n   */\n  set: function(key, val) {\n    this.data[key] = val;\n  },\n\n  /**\n   * Retrieve the data using the key\n   *\n   * @memberOf Barba.BaseCache\n   * @param  {String} key\n   * @return {*}\n   */\n  get: function(key) {\n    return this.data[key];\n  },\n\n  /**\n   * Flush the cache\n   *\n   * @memberOf Barba.BaseCache\n   */\n  reset: function() {\n    this.data = {};\n  }\n};\n\nmodule.exports = BaseCache;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Cache/BaseCache.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * HistoryManager helps to keep track of the navigation\n *\n * @namespace Barba.HistoryManager\n * @type {Object}\n */\nvar HistoryManager = {\n  /**\n   * Keep track of the status in historic order\n   *\n   * @memberOf Barba.HistoryManager\n   * @readOnly\n   * @type {Array}\n   */\n  history: [],\n\n  /**\n   * Add a new set of url and namespace\n   *\n   * @memberOf Barba.HistoryManager\n   * @param {String} url\n   * @param {String} namespace\n   * @private\n   */\n  add: function(url, namespace) {\n    if (!namespace)\n      namespace = undefined;\n\n    this.history.push({\n      url: url,\n      namespace: namespace\n    });\n  },\n\n  /**\n   * Return information about the current status\n   *\n   * @memberOf Barba.HistoryManager\n   * @return {Object}\n   */\n  currentStatus: function() {\n    return this.history[this.history.length - 1];\n  },\n\n  /**\n   * Return information about the previous status\n   *\n   * @memberOf Barba.HistoryManager\n   * @return {Object}\n   */\n  prevStatus: function() {\n    var history = this.history;\n\n    if (history.length < 2)\n      return null;\n\n    return history[history.length - 2];\n  }\n};\n\nmodule.exports = HistoryManager;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Pjax/HistoryManager.js\n ** module id = 9\n ** module chunks = 0\n **/","var Utils = require('../Utils/Utils');\nvar Dispatcher = require('../Dispatcher/Dispatcher');\nvar HideShowTransition = require('../Transition/HideShowTransition');\nvar BaseCache = require('../Cache/BaseCache');\n\nvar HistoryManager = require('./HistoryManager');\nvar Dom = require('./Dom');\n\n/**\n * Pjax is a static object with main function\n *\n * @namespace Barba.Pjax\n * @borrows Dom as Dom\n * @type {Object}\n */\nvar Pjax = {\n  Dom: Dom,\n  History: HistoryManager,\n  Cache: BaseCache,\n\n  /**\n   * Indicate wether or not use the cache\n   *\n   * @memberOf Barba.Pjax\n   * @type {Boolean}\n   * @default\n   */\n  cacheEnabled: true,\n\n  /**\n   * Indicate if there is an animation in progress\n   *\n   * @memberOf Barba.Pjax\n   * @readOnly\n   * @type {Boolean}\n   */\n  transitionProgress: false,\n\n  /**\n   * Class name used to ignore links\n   *\n   * @memberOf Barba.Pjax\n   * @type {String}\n   * @default\n   */\n  ignoreClassLink: 'no-barba',\n\n  /**\n   * Function to be called to start Pjax\n   *\n   * @memberOf Barba.Pjax\n   */\n  start: function() {\n    this.init();\n  },\n\n  /**\n   * Init the events\n   *\n   * @memberOf Barba.Pjax\n   * @private\n   */\n  init: function() {\n    var container = this.Dom.getContainer();\n    var wrapper = this.Dom.getWrapper();\n\n    wrapper.setAttribute('aria-live', 'polite');\n\n    this.History.add(\n      this.getCurrentUrl(),\n      this.Dom.getNamespace(container)\n    );\n\n    //Fire for the current view.\n    Dispatcher.trigger('initStateChange', this.History.currentStatus());\n    Dispatcher.trigger('newPageReady',\n      this.History.currentStatus(),\n      {},\n      container,\n      this.Dom.currentHTML\n    );\n    Dispatcher.trigger('transitionCompleted', this.History.currentStatus());\n\n    this.bindEvents();\n  },\n\n  /**\n   * Attach the eventlisteners\n   *\n   * @memberOf Barba.Pjax\n   * @private\n   */\n  bindEvents: function() {\n    document.addEventListener('click',\n      this.onLinkClick.bind(this)\n    );\n\n    window.addEventListener('popstate',\n      this.onStateChange.bind(this)\n    );\n  },\n\n  /**\n   * Return the currentURL cleaned\n   *\n   * @memberOf Barba.Pjax\n   * @return {String} currentUrl\n   */\n  getCurrentUrl: function() {\n    return Utils.cleanLink(\n      Utils.getCurrentUrl()\n    );\n  },\n\n  /**\n   * Change the URL with pushstate and trigger the state change\n   *\n   * @memberOf Barba.Pjax\n   * @param {String} newUrl\n   */\n  goTo: function(url) {\n    window.history.pushState(null, null, url);\n    this.onStateChange();\n  },\n\n  /**\n   * Force the browser to go to a certain url\n   *\n   * @memberOf Barba.Pjax\n   * @param {String} url\n   * @private\n   */\n  forceGoTo: function(url) {\n    window.location = url;\n  },\n\n  /**\n   * Load an url, will start an xhr request or load from the cache\n   *\n   * @memberOf Barba.Pjax\n   * @private\n   * @param  {String} url\n   * @return {Promise}\n   */\n  load: function(url) {\n    var deferred = Utils.deferred();\n    var _this = this;\n    var xhr;\n\n    xhr = this.Cache.get(url);\n\n    if (!xhr) {\n      xhr = Utils.xhr(url);\n      this.Cache.set(url, xhr);\n    }\n\n    xhr.then(\n      function(data) {\n        var container = _this.Dom.parseResponse(data);\n\n        _this.Dom.putContainer(container);\n\n        if (!_this.cacheEnabled)\n          _this.Cache.reset();\n\n        deferred.resolve(container);\n      },\n      function() {\n        //Something went wrong (timeout, 404, 505...)\n        _this.forceGoTo(url);\n\n        deferred.reject();\n      }\n    );\n\n    return deferred.promise;\n  },\n\n  /**\n   * Get the .href parameter out of an element\n   * and handle special cases (like xlink:href)\n   *\n   * @private\n   * @memberOf Barba.Pjax\n   * @param  {HTMLElement} el\n   * @return {String} href\n   */\n  getHref: function(el) {\n    if (!el) {\n      return undefined;\n    }\n\n    if (el.getAttribute && typeof el.getAttribute('xlink:href') === 'string') {\n      return el.getAttribute('xlink:href');\n    }\n\n    if (typeof el.href === 'string') {\n      return el.href;\n    }\n\n    return undefined;\n  },\n\n  /**\n   * Callback called from click event\n   *\n   * @memberOf Barba.Pjax\n   * @private\n   * @param {MouseEvent} evt\n   */\n  onLinkClick: function(evt) {\n    var el = evt.target;\n\n    //Go up in the nodelist until we\n    //find something with an href\n    while (el && !this.getHref(el)) {\n      el = el.parentNode;\n    }\n\n    if (this.preventCheck(evt, el)) {\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      Dispatcher.trigger('linkClicked', el, evt);\n\n      var href = this.getHref(el);\n      this.goTo(href);\n    }\n  },\n\n  /**\n   * Determine if the link should be followed\n   *\n   * @memberOf Barba.Pjax\n   * @param  {MouseEvent} evt\n   * @param  {HTMLElement} element\n   * @return {Boolean}\n   */\n  preventCheck: function(evt, element) {\n    if (!window.history.pushState)\n      return false;\n\n    var href = this.getHref(element);\n\n    //User\n    if (!element || !href)\n      return false;\n\n    //Middle click, cmd click, and ctrl click\n    if (evt.which > 1 || evt.metaKey || evt.ctrlKey || evt.shiftKey || evt.altKey)\n      return false;\n\n    //Ignore target with _blank target\n    if (element.target && element.target === '_blank')\n      return false;\n\n    //Check if it's the same domain\n    if (window.location.protocol !== element.protocol || window.location.hostname !== element.hostname)\n      return false;\n\n    //Check if the port is the same\n    if (Utils.getPort() !== Utils.getPort(element.port))\n      return false;\n\n    //Ignore case when a hash is being tacked on the current URL\n    if (href.indexOf('#') > -1)\n      return false;\n\n    //Ignore case where there is download attribute\n    if (element.getAttribute && typeof element.getAttribute('download') === 'string')\n      return false;\n\n    //In case you're trying to load the same page\n    if (Utils.cleanLink(href) == Utils.cleanLink(location.href))\n      return false;\n\n    if (element.classList.contains(this.ignoreClassLink))\n      return false;\n\n    return true;\n  },\n\n  /**\n   * Return a transition object\n   *\n   * @memberOf Barba.Pjax\n   * @return {Barba.Transition} Transition object\n   */\n  getTransition: function() {\n    //User customizable\n    return HideShowTransition;\n  },\n\n  /**\n   * Method called after a 'popstate' or from .goTo()\n   *\n   * @memberOf Barba.Pjax\n   * @private\n   */\n  onStateChange: function() {\n    var newUrl = this.getCurrentUrl();\n\n    if (this.transitionProgress)\n      this.forceGoTo(newUrl);\n\n    if (this.History.currentStatus().url === newUrl)\n      return false;\n\n    this.History.add(newUrl);\n\n    var newContainer = this.load(newUrl);\n    var transition = Object.create(this.getTransition());\n\n    this.transitionProgress = true;\n\n    Dispatcher.trigger('initStateChange',\n      this.History.currentStatus(),\n      this.History.prevStatus()\n    );\n\n    var transitionInstance = transition.init(\n      this.Dom.getContainer(),\n      newContainer\n    );\n\n    newContainer.then(\n      this.onNewContainerLoaded.bind(this)\n    );\n\n    transitionInstance.then(\n      this.onTransitionEnd.bind(this)\n    );\n  },\n\n  /**\n   * Function called as soon the new container is ready\n   *\n   * @memberOf Barba.Pjax\n   * @private\n   * @param {HTMLElement} container\n   */\n  onNewContainerLoaded: function(container) {\n    var currentStatus = this.History.currentStatus();\n    currentStatus.namespace = this.Dom.getNamespace(container);\n\n    Dispatcher.trigger('newPageReady',\n      this.History.currentStatus(),\n      this.History.prevStatus(),\n      container,\n      this.Dom.currentHTML\n    );\n  },\n\n  /**\n   * Function called as soon the transition is finished\n   *\n   * @memberOf Barba.Pjax\n   * @private\n   */\n  onTransitionEnd: function() {\n    this.transitionProgress = false;\n\n    Dispatcher.trigger('transitionCompleted',\n      this.History.currentStatus(),\n      this.History.prevStatus()\n    );\n  }\n};\n\nmodule.exports = Pjax;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Pjax/Pjax.js\n ** module id = 10\n ** module chunks = 0\n **/","var BaseTransition = require('./BaseTransition');\n\n/**\n * Basic Transition object, wait for the new Container to be ready,\n * scroll top, and finish the transition (removing the old container and displaying the new one)\n *\n * @private\n * @namespace Barba.HideShowTransition\n * @augments Barba.BaseTransition\n */\nvar HideShowTransition = BaseTransition.extend({\n  start: function() {\n    this.newContainerLoading.then(this.finish.bind(this));\n  },\n\n  finish: function() {\n    document.body.scrollTop = 0;\n    this.done();\n  }\n});\n\nmodule.exports = HideShowTransition;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Transition/HideShowTransition.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * Object that is going to deal with DOM parsing/manipulation\n *\n * @namespace Barba.Pjax.Dom\n * @type {Object}\n */\nvar Dom = {\n  /**\n   * The name of the data attribute on the container\n   *\n   * @memberOf Barba.Pjax.Dom\n   * @type {String}\n   * @default\n   */\n  dataNamespace: 'namespace',\n\n  /**\n   * Id of the main wrapper\n   *\n   * @memberOf Barba.Pjax.Dom\n   * @type {String}\n   * @default\n   */\n  wrapperId: 'barba-wrapper',\n\n  /**\n   * Class name used to identify the containers\n   *\n   * @memberOf Barba.Pjax.Dom\n   * @type {String}\n   * @default\n   */\n  containerClass: 'barba-container',\n\n  /**\n   * Full HTML String of the current page.\n   * By default is the innerHTML of the initial loaded page.\n   *\n   * Each time a new page is loaded, the value is the response of the xhr call.\n   *\n   * @memberOf Barba.Pjax.Dom\n   * @type {String}\n   */\n  currentHTML: document.documentElement.innerHTML,\n\n  /**\n   * Parse the responseText obtained from the xhr call\n   *\n   * @memberOf Barba.Pjax.Dom\n   * @private\n   * @param  {String} responseText\n   * @return {HTMLElement}\n   */\n  parseResponse: function(responseText) {\n    this.currentHTML = responseText;\n\n    var wrapper = document.createElement('div');\n    wrapper.innerHTML = responseText;\n\n    var titleEl = wrapper.querySelector('title');\n\n    if (titleEl)\n      document.title = titleEl.textContent;\n\n    return this.getContainer(wrapper);\n  },\n\n  /**\n   * Get the main barba wrapper by the ID `wrapperId`\n   *\n   * @memberOf Barba.Pjax.Dom\n   * @return {HTMLElement} element\n   */\n  getWrapper: function() {\n    var wrapper = document.getElementById(this.wrapperId);\n\n    if (!wrapper)\n      throw new Error('Barba.js: wrapper not found!');\n\n    return wrapper;\n  },\n\n  /**\n   * Get the container on the current DOM,\n   * or from an HTMLElement passed via argument\n   *\n   * @memberOf Barba.Pjax.Dom\n   * @private\n   * @param  {HTMLElement} element\n   * @return {HTMLElement}\n   */\n  getContainer: function(element) {\n    if (!element)\n      element = document.body;\n\n    if (!element)\n      throw new Error('Barba.js: DOM not ready!');\n\n    var container = this.parseContainer(element);\n\n    if (container && container.jquery)\n      container = container[0];\n\n    if (!container)\n      throw new Error('Barba.js: no container found');\n\n    return container;\n  },\n\n  /**\n   * Get the namespace of the container\n   *\n   * @memberOf Barba.Pjax.Dom\n   * @private\n   * @param  {HTMLElement} element\n   * @return {String}\n   */\n  getNamespace: function(element) {\n    if (element && element.dataset) {\n      return element.dataset[this.dataNamespace];\n    } else if (element) {\n      return element.getAttribute('data-' + this.dataNamespace);\n    }\n\n    return null;\n  },\n\n  /**\n   * Put the container on the page\n   *\n   * @memberOf Barba.Pjax.Dom\n   * @private\n   * @param  {HTMLElement} element\n   */\n  putContainer: function(element) {\n    element.style.visibility = 'hidden';\n\n    var wrapper = this.getWrapper();\n    wrapper.appendChild(element);\n  },\n\n  /**\n   * Get container selector\n   *\n   * @memberOf Barba.Pjax.Dom\n   * @private\n   * @param  {HTMLElement} element\n   * @return {HTMLElement} element\n   */\n  parseContainer: function(element) {\n    return element.querySelector('.' + this.containerClass);\n  }\n};\n\nmodule.exports = Dom;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Pjax/Dom.js\n ** module id = 12\n ** module chunks = 0\n **/","var Utils = require('../Utils/Utils');\nvar Pjax = require('./Pjax');\n\n/**\n * Prefetch\n *\n * @namespace Barba.Prefetch\n * @type {Object}\n */\nvar Prefetch = {\n  /**\n   * Class name used to ignore prefetch on links\n   *\n   * @memberOf Barba.Prefetch\n   * @type {String}\n   * @default\n   */\n  ignoreClassLink: 'no-barba-prefetch',\n\n  /**\n   * Init the event listener on mouseover and touchstart\n   * for the prefetch\n   *\n   * @memberOf Barba.Prefetch\n   */\n  init: function() {\n    if (!window.history.pushState) {\n      return false;\n    }\n\n    document.body.addEventListener('mouseover', this.onLinkEnter.bind(this));\n    document.body.addEventListener('touchstart', this.onLinkEnter.bind(this));\n  },\n\n  /**\n   * Callback for the mousehover/touchstart\n   *\n   * @memberOf Barba.Prefetch\n   * @private\n   * @param  {Object} evt\n   */\n  onLinkEnter: function(evt) {\n    var el = evt.target;\n\n    while (el && !Pjax.getHref(el)) {\n      el = el.parentNode;\n    }\n\n    if (!el || el.classList.contains(this.ignoreClassLink)) {\n      return;\n    }\n\n    var url = Pjax.getHref(el);\n\n    //Check if the link is elegible for Pjax\n    if (Pjax.preventCheck(evt, el) && !Pjax.Cache.get(url)) {\n      var xhr = Utils.xhr(url);\n      Pjax.Cache.set(url, xhr);\n    }\n  }\n};\n\nmodule.exports = Prefetch;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Pjax/Prefetch.js\n ** module id = 13\n ** module chunks = 0\n **/"],"sourceRoot":""},"metadata":{},"sourceType":"script"}